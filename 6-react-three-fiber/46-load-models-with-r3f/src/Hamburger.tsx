/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Mesh, MeshStandardMaterial } from "three";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    cheese: Mesh;
    meat: Mesh;
    topBun: Mesh;
    bottomBun: Mesh;
  };
  materials: {
    CheeseMaterial: MeshStandardMaterial;
    SteakMaterial: MeshStandardMaterial;
    BunMaterial: MeshStandardMaterial;
  };
};

export default function Hamburger(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./hamburger-draco.glb") as GLTFResult;
  const topBun = useRef<Mesh>(null!);

  useFrame((state) => {
    const time = state.clock.elapsedTime;

    topBun.current.position.y = 2.3 + Math.sin((Math.PI * 2 * time) / 6) * 0.5;
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cheese.geometry}
        material={materials.CheeseMaterial}
        material-color="pink"
        position={[0, 3, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meat.geometry}
        material={materials.SteakMaterial}
        position={[0, 2.8, 0]}
      />
      <mesh
        ref={topBun}
        castShadow
        receiveShadow
        geometry={nodes.topBun.geometry}
        material={materials.BunMaterial}
        position={[0, 1.8, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottomBun.geometry}
        material={materials.BunMaterial}
      />
    </group>
  );
}

useGLTF.preload("./hamburger-draco.glb");
